<%# app/views/opportunities/index.html.erb %>

<main class="max-w-[90rem] mx-auto px-5 sm:px-6 lg:px-8 pt-20 md:pt-24 pb-10">
  <div class="flex items-start justify-between gap-4">
    <div>
      <h1 class="text-2xl sm:text-3xl font-extrabold">Opportunit√©s</h1>
      <p class="text-slate-600 mt-1">Trouvez une action concr√®te pr√®s de chez vous.</p>
    </div>
    <%= link_to "Proposer une opportunit√©", new_opportunity_path,
        class: "hidden sm:inline-flex items-center px-4 py-2 rounded-lg bg-indigo-600 text-white hover:bg-indigo-700 shadow" %>
  </div>

  <!-- Filtres cat√©gories -->
  <div class="mt-5 flex flex-wrap gap-2">
    <button class="chip is-active" data-cat="toutes">üåç Toutes</button>
    <button class="chip" data-cat="benevolat">‚ù§Ô∏è B√©n√©volat</button>
    <button class="chip" data-cat="formation">üìò Formation</button>
    <button class="chip" data-cat="rencontres">üë• Rencontres</button>
    <button class="chip" data-cat="entreprendre">üíº Entreprendre</button>
  </div>

  <!-- Carte -->
  <div class="relative rounded-2xl border border-gray-200 bg-white shadow-sm overflow-hidden mt-4 mb-6">
    <div id="map-opps" class="h-[360px] md:h-[420px] w-full"></div>

    <!-- Boutons flottants -->
    <button id="btn-locate-opps"
            class="absolute right-3 top-3 z-20 inline-flex items-center gap-2 px-3 py-2 rounded-lg bg-white/95 ring-1 ring-gray-200 shadow hover:bg-white">
      <span>üìç</span><span class="text-sm font-medium">Me localiser</span>
    </button>
    <button id="btn-fixloc-opps"
            class="absolute right-3 top-14 z-20 inline-flex items-center gap-2 px-3 py-2 rounded-lg bg-white/95 ring-1 ring-gray-200 shadow hover:bg-white">
      <span>üó∫Ô∏è</span><span class="text-sm font-medium">D√©finir ma position</span>
    </button>
  </div>

  <!-- Liste cartes -->
  <div id="cards-grid" class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4">
    <% @opportunities.each do |o| %>
      <% badge =
        case o.category.to_s
        when 'benevolat'    then 'bg-rose-100 text-rose-700'
        when 'formation'    then 'bg-blue-100 text-blue-700'
        when 'rencontres'   then 'bg-green-100 text-green-700'
        else                     'bg-amber-100 text-amber-700'
        end %>
      <article class="op-card bg-white rounded-2xl border border-gray-100 shadow hover:shadow-md transition"
               data-cat="<%= o.category %>">
        <div class="p-4">
          <span class="inline-block text-[11px] font-semibold px-2 py-1 rounded-full <%= badge %>">
            <%= o.category.to_s.capitalize.presence || "Opportunit√©" %>
          </span>
          <h2 class="mt-2 font-semibold text-lg leading-snug line-clamp-2">
            <%= o.title %>
          </h2>
          <p class="text-[13px] text-gray-600 mt-1 line-clamp-3">
            <%= o.description %>
          </p>
          <div class="mt-3 flex items-center gap-3 text-[13px] text-gray-600">
            <% if o.location.present? %><span>üìç <%= o.location %></span><% end %>
            <% if o.time_commitment.present? %><span>‚è± <%= o.time_commitment %></span><% end %>
          </div>
          <div class="mt-4 flex items-center justify-between">
            <%= link_to "Voir la fiche", opportunity_path(o),
                  class: "inline-flex items-center px-3 py-1.5 rounded-lg bg-indigo-600 text-white hover:bg-indigo-700 text-sm" %>
            <%# petit indicateur ‚Äúcarte‚Äù si coordonn√©es pr√©sentes %>
            <% if o.latitude && o.longitude %>
              <span class="text-xs text-gray-500">üó∫Ô∏è</span>
            <% end %>
          </div>
        </div>
      </article>
    <% end %>
  </div>
</main>

<!-- Modal consentement g√©oloc -->
<div id="geo-consent" class="fixed inset-0 z-[500] hidden">
  <div class="absolute inset-0 bg-black/40"></div>
  <div class="absolute inset-0 grid place-items-center p-4">
    <div class="w-full max-w-md rounded-2xl bg-white shadow-xl ring-1 ring-black/10 p-6">
      <h3 class="text-lg font-semibold">Activer la g√©olocalisation&nbsp;?</h3>
      <p class="mt-1 text-sm text-gray-600">
        Nous l‚Äôutilisons uniquement pour centrer la carte autour de votre position. Aucune donn√©e n‚Äôest stock√©e c√¥t√© serveur.
      </p>
      <div class="mt-4 flex gap-3">
        <button id="geo-accept" class="inline-flex items-center justify-center px-4 py-2 rounded-lg bg-indigo-600 text-white hover:bg-indigo-700">Oui, me localiser</button>
        <button id="geo-decline" class="inline-flex items-center justify-center px-4 py-2 rounded-lg bg-gray-100 hover:bg-gray-200">Plus tard</button>
      </div>
    </div>
  </div>
</div>

<!-- Donn√©es c√¥t√© serveur -> JS -->
<script id="opps-json" type="application/json">
  <%= raw(
        @opportunities.as_json(
          only: [:id, :title, :description, :category, :organization, :location,
                 :latitude, :longitude, :starts_at, :ends_at, :time_commitment, :image_url,
                 :external_url, :url, :link_url, :registration_url, :source_url]
        ).to_json
      ) %>
</script>

<style>
  .chip{ @apply inline-flex items-center rounded-full px-3 py-1.5 text-sm bg-white ring-1 ring-gray-200 hover:bg-gray-50; }
  .chip.is-active{ @apply bg-indigo-600 text-white ring-0; }
  .picon{
    width:26px;height:26px;border-radius:9999px;border:2px solid #fff;display:grid;place-items:center;
    color:#fff;font-size:14px;box-shadow:0 1px 4px rgba(0,0,0,.25);position:relative;background:var(--c,#6366f1);
  }
  .picon::after{ content:"";position:absolute;left:50%;bottom:-6px;transform:translateX(-50%);
    border:6px solid transparent;border-top-color:var(--c,#6366f1); }
  /* carte popup */
  .popcard{display:grid;grid-template-columns:72px 1fr;gap:10px;min-width:260px;align-items:start}
  .popcard img{width:72px;height:72px;border-radius:10px;object-fit:cover;box-shadow:0 1px 4px rgba(0,0,0,.2)}
  .popcard h4{margin:0;font-weight:700;font-size:14px;line-height:1.2}
  .popcard .muted{color:#475569;font-size:12px}
</style>

<% content_for :scripts do %>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

  <script>
  (function(){
    const mapEl = document.getElementById('map-opps');
    if(!mapEl || !window.L) return;

    // ---- Carte
    const map = L.map(mapEl,{ zoomControl:true, scrollWheelZoom:true }).setView([46.6, 2.2], 6);
    mapEl._leaflet_map = map; // <- pour acc√®s externe si besoin
    const userLayer = L.layerGroup().addTo(map);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{ attribution:'¬© OpenStreetMap' }).addTo(map);

    // ---- Dataset
    const DATA = JSON.parse(document.getElementById('opps-json').textContent || '[]');

    // ---- Ic√¥nes / couleurs
    const colors={benevolat:'#ef4444',formation:'#3b82f6',rencontres:'#10b981',entreprendre:'#f59e0b',default:'#6366f1'};
    const emojis={benevolat:'‚ù§Ô∏è',formation:'üìò',rencontres:'üë•',entreprendre:'üíº',default:'‚≠ê'};
    const iconFor = (cat)=> L.divIcon({className:'',html:`<div class="picon" style="--c:${colors[cat]||colors.default}"><span>${emojis[cat]||emojis.default}</span></div>`,iconSize:[26,32],iconAnchor:[13,28],popupAnchor:[0,-26]});

    // ---- Aides dates/images
    function parseDate(x){ if(!x) return null; const d=new Date(x); return isNaN(d.getTime())?null:d; }
    function frLongDate(d){ return d ? d.toLocaleDateString('fr-FR',{weekday:'long',year:'numeric',month:'long',day:'numeric'}) : ''; }
    function frHM(d){ return d ? d.toLocaleTimeString('fr-FR',{hour:'2-digit',minute:'2-digit'}) : ''; }
    function thumbFor(o){
      if(o.image_url) return o.image_url;
      const cat=(o.category||'').toLowerCase();
      if(cat==='benevolat') return 'https://images.unsplash.com/photo-1488521787991-ed7bbaae773c?q=80&w=300&auto=format&fit=crop';
      if(cat==='formation') return 'https://images.unsplash.com/photo-1555949963-ff9fe0c870eb?q=80&w=300&auto=format&fit=crop';
      if(cat==='rencontres')return 'https://images.unsplash.com/photo-1511632765486-a01980e01a18?q=80&w=300&auto=format&fit=crop';
      if(cat==='entreprendre')return 'https://images.unsplash.com/photo-1556157382-97eda2d62296?q=80&w=300&auto=format&fit=crop';
      return 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?q=80&w=300&auto=format&fit=crop';
    }
    function extUrl(o){
      const cands = [o.external_url,o.url,o.link_url,o.registration_url,o.source_url];
      return (cands.find(u=>u && /^https?:\/\//i.test(String(u))) || null);
    }

    // ---- Markers
    const layer = L.layerGroup().addTo(map);
    function popupHtml(o){
      const st=parseDate(o.starts_at||o.start_at||o.start_time||o.date||o.scheduled_on);
      const en=parseDate(o.ends_at||o.end_at||o.end_time);
      const when = st ? `üìÖ ${frLongDate(st)}${en?` ‚Äî ${frHM(st)}‚Äì${frHM(en)}`:` ‚Äî ${frHM(st)}`}` : (o.time_commitment||'');
      const loc = o.location ? `üìç ${o.location}` : '';
      const img = thumbFor(o);
      const url = `/opportunities/${o.id}`;
      const more = extUrl(o);
      return `
        <div class="popcard">
          <img src="${img}" alt="">
          <div>
            <h4>${o.title||''}</h4>
            ${o.organization?`<div class="muted">${o.organization}</div>`:''}
            ${when?`<div class="muted">${when}</div>`:''}
            ${loc?`<div class="muted">${loc}</div>`:''}
            <div style="margin-top:6px;display:flex;gap:8px;flex-wrap:wrap">
              <a href="${url}" class="text-indigo-600 underline text-sm">Voir la fiche</a>
              ${more?`<a href="${more}" target="_blank" rel="noopener" class="text-indigo-600 underline text-sm">Plus d‚Äôinfos</a>`:''}
            </div>
          </div>
        </div>`;
    }
    function plot(items){
      layer.clearLayers();
      const bounds=[];
      (items||[]).forEach(o=>{
        if(!o.latitude || !o.longitude) return;
        L.marker([o.latitude,o.longitude],{icon:iconFor((o.category||'').toLowerCase())})
          .addTo(layer).bindPopup(popupHtml(o));
        bounds.push([o.latitude,o.longitude]);
      });
      if(bounds.length) map.fitBounds(bounds,{padding:[24,24]});
    }
    plot(DATA);

    // ---- Filtres (carte + cartes)
    const chips=[...document.querySelectorAll('.chip')];
    const cards=[...document.querySelectorAll('.op-card')];
    function applyFilter(cat){
      // carte
      const filtered = (cat==='toutes') ? DATA : DATA.filter(o => (o.category||'').toLowerCase()===cat);
      plot(filtered);
      // cartes
      cards.forEach(c=>{
        const ok = (cat==='toutes' || (c.dataset.cat||'').toLowerCase()===cat);
        c.style.display = ok ? '' : 'none';
      });
    }
    chips.forEach(chip=>chip.addEventListener('click',()=>{
      chips.forEach(c=>c.classList.remove('is-active')); chip.classList.add('is-active');
      applyFilter(chip.dataset.cat);
    }));

    // ==================== G√©olocalisation ====================
    const OK_ACC = 5000;
    let clickToSet=false, watchId=null;

    function toast(msg){
      try{
        const t=document.createElement('div'); t.textContent=msg;
        t.className="fixed bottom-4 left-1/2 -translate-x-1/2 z-[600] px-4 py-2 rounded-lg bg-slate-900 text-white shadow";
        document.body.appendChild(t); setTimeout(()=>t.remove(), 4500);
      }catch{ alert(msg); }
    }

    function centerUser(lat, lon, accuracy, source='auto'){
      userLayer.clearLayers();
      const icon=L.divIcon({className:'',html:`<div class="picon" style="--c:#2563eb"><span>üìç</span></div>`,iconSize:[26,32],iconAnchor:[13,28]});
      L.marker([lat, lon], {icon}).addTo(userLayer)
        .bindPopup(`<strong>Vous √™tes ici</strong>${accuracy?`<br><small>Pr√©cision ~${Math.round(accuracy)} m</small>`:''}`);
      if(accuracy && accuracy<2000){
        L.circle([lat, lon], { radius: accuracy, color:'#2563eb', fillColor:'#3b82f6', fillOpacity:.12, weight:1 }).addTo(userLayer);
      }
      map.flyTo([lat, lon], Math.max(map.getZoom(), 13), { duration:.8 });
      if ((accuracy && accuracy <= 5000) || String(source).startsWith('manual')){
        try{ localStorage.setItem('declic_user_pos', JSON.stringify({ lat, lng: lon })); }catch{}
      }
    }

    function tryImproveFix(onBetter, onEnd){
      if(!('geolocation' in navigator)) return onEnd?.();
      const started = Date.now();
      watchId = navigator.geolocation.watchPosition(
        (pos)=>{
          const c=pos.coords;
          if(c.accuracy<=OK_ACC){ onBetter(c); stopWatch(); }
          else if(Date.now()-started>30000){ onEnd?.(); stopWatch(); }
        },
        ()=>{ onEnd?.(); stopWatch(); },
        { enableHighAccuracy:true, maximumAge:0, timeout:30000 }
      );
      function stopWatch(){ if(watchId!=null){ navigator.geolocation.clearWatch(watchId); watchId=null; } }
    }

    function doLocate(){
      if(!('geolocation' in navigator)) return;
      navigator.geolocation.getCurrentPosition(
        (pos)=>{
          const c=pos.coords;
          if(c.accuracy<=OK_ACC){ centerUser(c.latitude, c.longitude, c.accuracy); localStorage.setItem('declic_geo_pref','granted'); }
          else{
            tryImproveFix(
              (better)=>{ centerUser(better.latitude,better.longitude,better.accuracy); localStorage.setItem('declic_geo_pref','granted'); },
              ()=>{ centerUser(c.latitude,c.longitude,c.accuracy); toast("Localisation approximative. Cliquez ¬´ D√©finir ma position ¬ª puis un point sur la carte pour corriger."); }
            );
          }
        },
        ()=>{
          localStorage.setItem('declic_geo_pref','denied');
          toast("G√©olocalisation refus√©e. Vous pouvez la r√©activer via le bouton ¬´ Me localiser ¬ª.");
        },
        { enableHighAccuracy:true, timeout:15000, maximumAge:0 }
      );
    }

    // Position m√©moris√©e
    try{
      const saved = localStorage.getItem('declic_user_pos');
      if (saved) {
        const p = JSON.parse(saved);
        if (p && typeof p.lat === 'number' && typeof p.lng === 'number') {
          centerUser(p.lat, p.lng, 50, 'manual-cache');
        }
      }
    }catch{}

    // Boutons
    document.getElementById('btn-locate-opps')?.addEventListener('click', doLocate);
    const btnFix = document.getElementById('btn-fixloc-opps');
    btnFix?.addEventListener('click', ()=>{
      clickToSet = !clickToSet;
      btnFix.style.background = clickToSet ? '#eef2ff' : 'rgba(255,255,255,.95)';
      toast(clickToSet ? "Cliquez sur la carte pour d√©finir votre position." : "Mode d√©sactiv√©.");
    });
    map.on('click', (e)=>{
      if(!clickToSet) return;
      const {lat, lng} = e.latlng;
      centerUser(lat, lng, 20, 'manual-click');
      localStorage.setItem('declic_geo_pref','granted');
      clickToSet=false; btnFix.style.background='rgba(255,255,255,.95)';
    });

    // Consentement (m√™me logique que la home)
    const modal=document.getElementById('geo-consent'), accept=document.getElementById('geo-accept'), decline=document.getElementById('geo-decline');
    const openModal=()=>modal?.classList.remove('hidden'); const closeModal=()=>modal?.classList.add('hidden');
    accept?.addEventListener('click', ()=>{ closeModal(); doLocate(); });
    decline?.addEventListener('click', ()=>{ closeModal(); localStorage.setItem('declic_geo_pref','denied'); });

    async function askConsentIfNeeded(){
      const pref=localStorage.getItem('declic_geo_pref');
      if(pref==='granted'){ doLocate(); return; }
      if(pref==='denied'){ return; }
      try{
        if(navigator.permissions?.query){
          const st=await navigator.permissions.query({ name:'geolocation' });
          if(st.state==='granted'){ localStorage.setItem('declic_geo_pref','granted'); doLocate(); return; }
          if(st.state==='denied'){  localStorage.setItem('declic_geo_pref','denied'); return; }
          openModal();
        }else{ openModal(); }
      }catch{ openModal(); }
    }
    document.addEventListener('turbo:load', askConsentIfNeeded, { once:true });
    document.addEventListener('DOMContentLoaded', askConsentIfNeeded, { once:true });
  })();
  </script>
<% end %>


